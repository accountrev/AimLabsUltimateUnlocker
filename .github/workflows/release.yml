name: Release â€” build & attach artifacts

on:
  push:
    tags:
      - 'v*.*.*'     # creates a release for tags like v1.2.3
  workflow_dispatch: {} # allows manual run from Actions UI

permissions:
  contents: write   # needed to create releases and upload assets
  packages: write

jobs:
  build-and-release:
    name: Build, package, and release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # change if required

      - name: Build and publish all projects
        run: |
          set -eux
          rm -rf release_artifacts || true
          mkdir -p release_artifacts
          projects=( $(git ls-files '*.csproj') )
          if [ ${#projects[@]} -eq 0 ]; then
            echo "No .csproj files found - nothing to publish"
            exit 0
          fi
          for proj in "${projects[@]}"; do
            name=$(basename "$proj" .csproj)
            out=release_artifacts/${name}
            echo "Publishing $proj -> $out"
            dotnet publish "$proj" -c Release -o "$out"
            cd release_artifacts
            zip -r "${name}.zip" "$name"
            cd ..
          done

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        if: always()
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release_artifacts
          asset_name: all-artifacts.zip
          asset_content_type: application/zip